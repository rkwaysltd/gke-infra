name: 'Terraform'

on:
  push:
    branches:
    - main
  pull_request:

jobs:
  terraform:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        include:
        # dev cluster
        - name: Development
          tf_workspace: dev
          tf_variables: "variables.dev.tfvars.json"
          tf_credentials: "GOOGLE_CREDENTIALS_DEV"
        # prod cluster
        - name: Production
          tf_workspace: prod
          tf_variables: "variables.prod.tfvars.json"
          tf_credentials: "GOOGLE_CREDENTIALS_PROD"
    name: "Terraform - ${{ matrix.name }} "

    defaults:
      run:
        shell: bash

    env:
      TF_IN_AUTOMATION: 1
      TF_STATE_BUCKET: ${{ secrets.TF_STATE_BUCKET }}
      TF_VARIABLES: ${{ matrix.tf_variables }}
      TF_WORKSPACE: ${{ matrix.tf_workspace }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Preflight
      id: preflight
      run: |
        set -eu
        echo "PROJECT_ID=$(jq -re .project_id < $TF_VARIABLES)" >> $GITHUB_ENV
        echo "::set-output name=project_id::$(jq -re .project_id < $TF_VARIABLES)"

    - name: Render templates
      run: ./render_tmpl.sh

    - name: Setup gcloud CLI
      uses: google-github-actions/setup-gcloud@master
      with:
        version: '321.0.0'
        service_account_key: ${{ secrets[matrix.tf_credentials] }}
        project_id: ${{ steps.preflight.outputs.project_id }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 0.14.3

    - name: Terraform Format
      id: fmt
      run: |
        # disable command workflow processing
        echo "::stop-commands::`echo -n ${{ github.token }} | sha256sum | head -c 64`"
        terraform fmt -check
      continue-on-error: true

    - name: Terraform Init
      id: init
      env:
        GOOGLE_BACKEND_CREDENTIALS: ${{ secrets.GOOGLE_BACKEND_CREDENTIALS }}
        GOOGLE_ENCRYPTION_KEY: ${{ secrets.GOOGLE_ENCRYPTION_KEY }}
      run: |
        # disable command workflow processing
        echo "::stop-commands::`echo -n ${{ github.token }} | sha256sum | head -c 64`"
        # workaround for https://github.com/hashicorp/terraform/issues/21393
        TF_WORKSPACE= terraform init -input=false < /dev/null

    - name: Terraform Validate
      id: validate
      run: |
        # disable command workflow processing
        echo "::stop-commands::`echo -n ${{ github.token }} | sha256sum | head -c 64`"
        terraform validate -no-color

    - name: Terraform Plan
      id: plan
      env:
        GOOGLE_BACKEND_CREDENTIALS: ${{ secrets.GOOGLE_BACKEND_CREDENTIALS }}
        GOOGLE_ENCRYPTION_KEY: ${{ secrets.GOOGLE_ENCRYPTION_KEY }}
        GOOGLE_CREDENTIALS: ${{ secrets[matrix.tf_credentials] }}
      run: |
        # disable command workflow processing
        echo "::stop-commands::`echo -n ${{ github.token }} | sha256sum | head -c 64`"
        terraform plan -out=tfplan -input=false -var-file="$TF_VARIABLES" -no-color

    - uses: actions/github-script@0.9.0
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style 🖌\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ⚙️\`${{ steps.init.outcome }}\`
          #### Terraform Validation 🤖${{ steps.validate.outputs.stdout }}
          #### Terraform Plan 📖\`${{ steps.plan.outcome }}\`
          
          <details><summary>Show Plan</summary>
          
          \`\`\`${process.env.PLAN}\`\`\`
          
          </details>
          
          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
          
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    - name: Terraform Apply
      id: apply
      env:
        GOOGLE_BACKEND_CREDENTIALS: ${{ secrets.GOOGLE_BACKEND_CREDENTIALS }}
        GOOGLE_ENCRYPTION_KEY: ${{ secrets.GOOGLE_ENCRYPTION_KEY }}
        GOOGLE_CREDENTIALS: ${{ secrets[matrix.tf_credentials] }}
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -input=false tfplan
